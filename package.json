{
	"name": "vscode-go-gvm",
	"displayName": "GVM: Go Version Manager",
	"description": "An extension to make it easier to manage golang vesions using GVM inside your prefered editor",
	"publisher": "felipecaputo0",
	"repository": {
		"type": "git",
		"url": "https://github.com/felipecaputo/vscode-go-gvm"
	},
	"bugs": {
		"email": "felipe.caputo@gmail.com",
		"url": "https://github.com/felipecaputo/vscode-go-gvm/issues"
	},
	"icon": "assets/gologo.jpg",
	"galleryBanner": {
		"color": "#303030",
		"theme": "dark"
	},
	"version": "1.0.0",
	"engines": {
		"vscode": "^1.44.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:go"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "vscode-go-gvm.install-go-version",
				"title": "GVM: Install Go version"
			},
			{
				"command": "vscode-go-gvm.remove-go-version",
				"title": "GVM: Uninstall Go version"
			},
			{
				"command": "vscode-go-gvm.set-current-version",
				"title": "GVM: Set current version"
			},
			{
				"command": "vscode-go-gvm.set-default-version",
				"title": "GVM: Set default version"
			}
		],
		"configuration": {
			"title": "GVM - Go Version Manager",
			"properties": {
				"gvm.pathToDefaultTerminal": {
					"type": "string",
					"description": "Path to terminal, when not configured, it will OS default shell using the `$SHELL` evironment variable. In caso of this variable not found, uses `/bin/bash`, but can be almost any shell that supports `source _script_`"
				},
				"gvm.showVersionOnStatusBar": {
					"type": "boolean",
					"default": true,
					"description": "Determine if the current GVM/Go version is shown on status bar"
				},
				"gvm.setVersionWithDefault": {
					"type": "boolean",
					"default": true,
					"description": "If enabled, will set current version on use with `--current`"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.44.0",
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"eslint": "^6.8.0",
		"@typescript-eslint/parser": "^2.26.0",
		"@typescript-eslint/eslint-plugin": "^2.26.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.1",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0",
		"@types/chai": "^4.2.11",
		"@types/sinon": "^9.0.0",
		"chai": "^4.2.0",
		"sinon": "^9.0.2"
	},
	"dependencies": {}
}